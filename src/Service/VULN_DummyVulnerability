<?php

namespace App\Service;

use App\Entity\Vulnerability;
use App\Entity\Tool;

use App\Repository\ToolRepository;

class VULN_DummyVulnerability {
    /*
        Vulnerability:          DummyTool
        Responsible:            AA
        OpenProject Phase #:    999

        Summary:
            ... quick summary on the vulnerability and what tools are required


        Output (HTML):
            HTML formatted output to go straight into the Report.
    */

    private ToolRepository $ToolsRepository;
    private Tool $TDummy;
    private $Severity;
    private $HTML;

    
    // TODO look up the results of a Tool entity from the database
    // I think it's something like: ??

    public function __construct(private Vulnerability $vulnerability){
        $this->ToolsRepository = $entityManager->getRepository(Tool::class);
        $this->TDummy = $this->ToolsRepository->findOneBy([
            'name' => 'nslookup',
            'scan' => $vulnerability->getScanId(),
        ]);

    }
    
    
    // Now that I have the tool, analyse the output of it

    // Information output
    public function Analyse() {
        // process the data from the tool
        
        // fetch the data and decode the JSON (not sure if this is done by Symfony...?)
        //$output = json_decode($this->TDummy->getResults(), true);
        $output = $this->TDummy->getResults();

        // analyse it somehow

        // calculate the severities and store
        $this->Severity = 0;

        // and the HTML:
        $this->HTML = "<p>The results are: " . $output . ". Yes, this will need more formatting and extraction
        of $output...";

    }

    public function getSeverity(): ?int
    {
        return $this->Severity;
    }
    public function getHTML(): ?int
    {
        return $this->HTML;
    }

}


